# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Set Git user identity
      run: |
        git config --global user.email "thollaar@gmail.com.com"
        git config --global user.name "tonyhollaar"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bump2version
        pip install build
    - name: Bump version
      run: |
        # Bump version in version.py and setup.py
        bump2version minor --allow-dirty --no-commit --tag
        NEW_VERSION=$(cat version.py | grep "__version__" | cut -d'"' -f2)
        sed -i "s/version='.*'/version='$NEW_VERSION'/" setup.py
        git add version.py setup.py
        git commit -m "Bump version to $NEW_VERSION"
        git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
        git push --follow-tags
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: tonyhollaar
        password: ${{ secrets.PYPI_API_TOKEN }}
